from backend.tests.conftest import client
import json

def test_notification_sent_on_task_update(
    auth_headers, sample_main_task, mock_notification_service,
    patch_crud_for_testing, test_project
):
    """Ensure a notification is triggered when a task is updated"""
    # --- Step 1: Create a task first ---
    create_payload = {"main_task": sample_main_task}
    create_resp = client.post(
        "/api/tasks/createTask",
        data={"task_data": json.dumps(create_payload)},
        headers=auth_headers
    )
    assert create_resp.status_code == 200
    created_task = create_resp.json()["main_task"]

    # --- Step 2: Update the task ---
    update_payload = {
        "id": created_task["id"],
        "title": "Updated Task Title",
        "status": "IN_PROGRESS"
    }

    update_resp = client.put(
        "/api/tasks/updateTask",
        data={"task_data": json.dumps(update_payload)},
        headers=auth_headers
    )

    print(update_resp.status_code, update_resp.text)
    assert update_resp.status_code == 200

    # --- Step 3: Verify notification call ---
    mock_notification_service.assert_called()
    call_args = mock_notification_service.call_args.kwargs

    assert call_args["action"] == "updated"
    assert "task" in call_args
    assert call_args["task"]["id"] == created_task["id"]
    assert call_args["task"]["title"] == "Updated Task Title"
